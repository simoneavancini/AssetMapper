openapi: 3.0.1
info:
  title: autorecon
  version: "1.0"
servers:
- url: http://127.0.0.1:8080/
paths:
  /user_db_adapter/users:
    get:
      tags:
        - Adapters
      summary: List of users
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                    email:
                      type: string
    post:
      tags:
        - Adapters
      summary: Create a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      responses:
        "201":
          description: User successfully created
        "400":
          description: Username already registered
  /user_db_adapter/users/{username}:
    get:
      tags:
        - Adapters
      summary: User details
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  email:
                    type: string
        "404":
          description: User not found
  /user_db_adapter/users/verify/{username}:
    post:
      tags:
        - Adapters
      summary: Verify user password
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
        required: true
      responses:
        "200":
          description: Successful authentication
        "404":
          description: User not found
        "401":
          description: Invalid password
  /google_search_adapter/subdomains:
    get:
      tags:
        - Adapters
      summary: Search subdomains on Google
      parameters:
      - name: target
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                example:
                - subdomain.example.com
                items:
                  type: string
  /crt_sh_adapter/subdomains:
    get:
      tags:
        - Adapters
      summary: Find subdomains from crt.sh
      parameters:
      - name: target
        in: query
        required: true
        schema:
          type: string
      - name: test
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: Successful Response
          content:
            '*/*':
              schema:
                type: array
                example:
                - subdomain.example.com
                items:
                  type: string
  /dns_adapter/resolve:
    post:
      tags:
        - Adapters
      summary: Resolve the input domains and return their IP addresses
      requestBody:
        content:
          application/json:
            schema:
              type: array
              example:
              - example.com
              - www.example.com
              items:
                type: string
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resolved_domains'
        "400":
          description: Invalid request
  /ipinfo_adapter/info:
    post:
      tags:
        - Adapters
      summary: Return info about the target IPs
      requestBody:
        content:
          application/json:
            schema:
              type: array
              example:
              - 1.1.1.1
              - 1.1.1.2
              items:
                type: string
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ips_info'

components:
  schemas:
    user:
      title: User
      required:
      - email
      - password
      - username
      type: object
      properties:
        email:
          type: string
        username:
          type: string
        password:
          type: string
    resolved_domains:
      title: Domains and IPs
      type: array
      items:
        type: object
        properties:
          domain:
            type: string
          ips:
            type: array
            items:
              type: string
        example:
          domain: example.com
          ips:
          - 1.1.1.1
          - 1.1.1.2
    ips_info:
      title: IPs info
      type: array
      items:
        required:
        - ip
        type: object
        properties:
          ip:
            type: string
          org:
            type: string
          loc:
            type: string
        example:
          ip: 1.1.1.1
          org: "AS13335 Cloudflare, Inc."
          loc: "-27.4816,153.0175"
