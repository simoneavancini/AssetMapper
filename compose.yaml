services:
  # Data service
  user_db:
    image: mongo:latest
    restart: always
    volumes:
      - user_db:/data/db
    command: mongod --quiet --logpath /dev/null
    networks:
      - internal_net

  scan_db:
    image: mongo:latest
    restart: always
    volumes:
      - scan_db:/data/db
    command: mongod --quiet --logpath /dev/null
    networks:
      - internal_net

  # Adapters
  user_db_adapter:
    build: ./adapter/user_db
    restart: always
    environment:
      - PORT=80
      - DB_HOST=user_db
    networks:
      - internal_net

  scan_db_adapter:
    build: ./adapter/scan_db
    restart: always
    environment:
      - PORT=80
      - DB_HOST=scan_db
    networks:
      - internal_net

  crt_sh_adapter:
    build: ./adapter/crt_sh
    restart: always
    networks:
      - internal_net

  google_search_adapter:
    build: ./adapter/google_search
    restart: always
    networks:
      - internal_net

  dns_adapter:
    build: ./adapter/dns
    restart: always
    networks:
      - internal_net

  ipinfo_adapter:
    build: ./adapter/ipinfo
    restart: always
    environment:
      - API_KEY=${IPINFO_API_KEY}
    networks:
      - internal_net

  builtwith_adapter:
    build: ./adapter/builtwith
    restart: always
    environment:
      - API_KEY=${BUILTWITH_API_KEY}
    networks:
      - internal_net

  hunterio_adapter:
    build: ./adapter/hunterio
    restart: always
    environment:
      - API_KEY=${HUNTERIO_API_KEY}
    networks:
      - internal_net

  # Business logic
  attack_surface:
    build: ./business_logic/attack_surface
    restart: always
    environment:
      - PORT=80
      - CRT_SH_ADAPTER=http://crt_sh_adapter:80
      - GOOGLE_SEARCH_ADAPTER=http://google_search_adapter:80
      - DNS_ADAPTER=http://dns_adapter:80
      - IPINFO_ADAPTER=http://ipinfo_adapter:80
    networks:
      - internal_net
  tech_detection:
    build: ./business_logic/tech_detection
    restart: always
    environment:
      - PORT=80
      - BUILTWITH_ADAPTER=http://builtwith_adapter:80
    networks:
      - internal_net
  employee_data:
    build: ./business_logic/employee_data
    restart: always
    environment:
      - PORT=80
      - HUNTERIO_ADAPTER=http://hunterio_adapter:80
    networks:
      - internal_net

  # Process centric
  authentication:
    build: ./process_centric/authentication
    restart: always
    environment:
      - PORT=80
      - DB_ADAPTER_URL=http://user_db_adapter
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - 3000:3000
    networks:
      - internal_net
  scan:
    build: ./process_centric/scan
    restart: always
    environment:
      - PORT=80
      - ATTACK_SURFACE=http://attack_surface:80
      - TECH_DETECTION=http://tech_detection:80
      - EMPLOYEE_ANALYSIS=http://employee_data:80
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - 3001:3000
    networks:
      - internal_net
  scan_storage:
    build: ./process_centric/scan_storage
    restart: always
    environment:
      - PORT=80
      - SCAN_DB_ADAPTER=http://scan_db_adapter:80
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - 3002:3000
    networks:
      - internal_net

  # Proxy used for debug purposes
  proxy:
    image: nginx:latest
    volumes:
      - ./reverse_proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    networks:
      - internal_net

networks:
  internal_net:

volumes:
  user_db:
  scan_db:
